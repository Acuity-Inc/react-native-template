on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - 'main'
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '30 5 * * *'
jobs:
  integrate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'

      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - name: Check linting and formatting
        run: npm run lint

      - name: SonarQube scan
        run: npx sonarqube-scanner -Dsonar.projectName=${{ github.repository}} -Dsonar.login=${{ vars.TSG_INNOLAB_SONARQUBE_USER }} -Dsonar.password=${{ secrets.TSG_INNOLAB_SONARQUBE_PASSWORD }} -Dsonar.host.url=${{ vars.TSG_INNOLAB_SONARQUBE_URL }}

      - name: Vulnerability scan
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b .
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b .
          ./syft . -o cyclonedx-xml > sbom.xml
          ./grype sbom.xml --fail-on critical

  deploy-template:
    runs-on: ubuntu-latest
    needs: [integrate]
    if: github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v3
        with:
          repository: Acuity-Inc/<<[(ds "config").project_name]>>-template
          ref: main
          path: template
          token: ${{ secrets.GH_PAT }}
      - uses: actions/checkout@v3
        with:
          path: raw
      - run: |
          rsync -va --exclude .git ./raw/ ./template/
          cd template
          ./scripts/deploy_template.sh
          git config --global user.email "jesse@techno-geeks.org"
          git config --global user.name "Jesse R. Adams"
          git add .
          git commit -m 'Deploy template from source: ${{ github.sha }}'
          git push origin main

  create-ticket:
    runs-on: ubuntu-latest
    needs: [integrate, deploy-template] # Depends on integrate job above
    if: always() && (needs.integrate.result == 'failure' || needs.deploy-template.result == 'failure') && github.event_name != 'pull_request'

    steps:
      - name: Log in to JIRA
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ vars.TSG_INNOLAB_JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ vars.TSG_INNOLAB_JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.TSG_INNOLAB_JIRA_API_TOKEN }}

      - name: Create JIRA Issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: IL23
          issuetype: Task
          summary: CI Failure for ${{ github.repository }}
          description: Please see full details at https://github.com/${{ github.repository}}/actions/runs/${{ github.run_id }}
          fields: '{"labels": ["TechChallengeSuccess"]}'

      - name: Log created issue
        run: echo "Issue ${{ steps.create.outputs.issue }} was created, see ${{ vars.TSG_INNOLAB_JIRA_BASE_URL }}/browse/${{ steps.create.outputs.issue }}"
